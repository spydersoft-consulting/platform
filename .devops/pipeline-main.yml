trigger:
  tags:
    include:
    - "*"
  branches:
    include:
    - main
    - feature/*
pr:
- main

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: spydersoft-gh
      name: spydersoft-consulting/azure-devops-templates

variables:
  - group: nuget-spydersoft-develop

extends:
  template: pipelines/dotnet-library-build/v1.yml@templates
  parameters:
    projectsToBuild: src/Spydersoft.Platform.Hosting/Spydersoft.Platform.Hosting/Spydersoft.Platform.Hosting.csproj
    projectsToPack: src/Spydersoft.Platform.Hosting/Spydersoft.Platform.Hosting/Spydersoft.Platform.Hosting.csproj
    executeTests: true
    externalPublishUrl: $(nuget-feed-url)
    externalPublishApiKey: $(nuget-feed-api-key)
    # If it's a PR or a build from main (not a tag) then don't publish to Nuget
    ${{ if or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'main')) }}:
      publishToNuget: false
    ${{ else }}:
      publishToNuget: true
    dotnetSdk: "8.0.x"
    gitVersionVersion: "6.x"
    nugetConfigPath: $(Build.SourcesDirectory)/src/nuget.config
    executeSonar: true
    useSonarCloud: true
    sonarEndpointName: sonarcloud-spydersoft
    sonarProjectKey: spydersoft_platform
    sonarProjectName: Spydersoft.Platform
    sonarExtraProperties: |
      sonar.projectKey=spydersoft_platform
      sonar.inclusions=src/**/
      sonar.exclusions=src/**/*.UnitTests/;src/**/*.ApiTests/
      sonar.test.inclusions=src/**/*.UnitTests/;src/**/*.ApiTests/
      sonar.scanner.scanAll=false